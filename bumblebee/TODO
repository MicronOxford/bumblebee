$Id$can change another's bookings: edit, delete etc

* db structure:
  - SMALLINT is max 32767. Is this a limitation (e.g. number bookings!)?


* bookings
  - pass/log book vs future/bookings setup for instruments
  - TSR * blows up on 00:00-24:00
  - TSR * does not validate against non-full time
  - admin can see a list of deleted bookings?

* projects
  - Create project doesn't seem to actually sync projectgroups table on allocation.

* costs
  - join table not working
  - define what half-day etc is to make billing calcs.

* special costs 
  - todo

reorganise source code into clean include regions. 
use .inc?
use a config/ dir
protect these with .htaccess files.

look at other PHP methods for getting things out of hash arrays (array_walk, array_keys, in_array)

create a real db with no bogus booking data and no dodgy invalid users etc

M$IE testing etc

masquerade broken: adminmenu.php, masquerade.php

include BILLING algorithm

backups of database


* email lists
  - ooify?
* masq
  - ooify, make sensible
* billing
  - todo



prefix to all table names?
install.php?

gracefully handle lack of mysql db

document radius install and config

* theme
  - design new theme, bg etc
  - icon location

* massive CSS cleanup
  - ununsed classes
  - absolute paths
  - 
* theme into CVS?
  - css?
  - pix?


css today, monthodd/even booking/vacant configurable?

joindata::_countNumRows counts the rows too early (can we force a recount?)
  => when adding permissions to a user, the number of permissions doesn't increase

DBRow now has delete method too (and deleteProject($id) is not qw safe!!!)

clean up action functions.
should most actions just be invoking objects? (help with namespace)
should groups, projects, users actions etc be invocations of the *same* obj?

" " to ' ' where possible

XSS checks

SQL bad character checking -- qw, unqw?

' => \' => \\\' etc. bad.

OOify the action construction to provide namespaces

billing analysis, incl consumables

finish ooifying the admin functions

separate generic field, form, sql classes from user project etc classes

->layout switch? use as call back function?

radiolist always returns ischanged on update()

make sure large data structures are being passed by reference not value
(speed up)

reflect postdata in case of re-login

$string = strip_tags($string, '<a><b><i><u>')
also do this in qw? $string = strip_tags($string, '')

define("CONSTANT", "Hello world.");

$_SERVER['PHP_SELF']

Objects for forms... (date, time, simple string)

INPUT VALIDATION (do this through objects?)

check for noise in error logs

use redirect header to react to override action= 

divs => table cells for calendar

hour => halfday => fullday from costs table

log book reporting

permit deletion of instrument classes


escape SQL input for bad characters. esp '. (magic_quotes_gpc solves this?)
escape HTML in output?
  echo "<a href='" . htmlspecialchars("/nextpage.php?stage=23&data=" .
          urlencode($data)) . "'>\n";
      echo "<textarea name='mydata'>\n";
      echo htmlspecialchars($data)."\n";
      echo "</textarea>";

streamline creation of project with only one group
streamline creation of project when creating a user
(projects: create new as option and if set to create new then make one and send the projectid to "edit project")

??  work out confirmation emails and when adminconfirm is necessary

?? create flag for compulsory emails for some events (e.g. booking Raman)

select all/deselect all javascript buttons where applicable

* unbook emails

include consumables and output templating in reporting

billing analysis clean-up procedure... offer each of select groups, projects and users but only where applicable for the billing format in question

clean up user interface

allow templating/skinning of all user interface setup

globally change groups to accounts or bills or something?

* who has used what instruments on what days
* who per month

delete references to groups, projects in billing info, userprojects etc
-- should there be checks for this? cannot delete things if used elsewhere?


show log entries / instrument usage summary


Billing SQL notes:

for billing analysis, write a smart parser that scans the template for keys to write the SQL. May need to do some clever parsing too.

reporting: 
subqueries for "FROM" don't work with current version of MySQL (4.0)
TIMEDIFF and SUBTIME don't work with current MySQL.
maybe use a CREATE...SELECT statement into a temporary table. (how?)
CEIL(x) or CEILING(x) can be used to round up to nearest integer for num hours

Can existing (huge!) expression be used with just variable SELECT (or just select everything?) ORDER BY and GROUP BY clauses.






LIMITATIONS
===========
no GUI to delete a userclass or instrumentclass 
records are not locked while edited (update is atomic, but last-submitted changes win)

$Id$

* 1.0 series
------------
Bugs:
  book dropdown on 10:00-16:00/6 includes times that would overlap bookings
* double entry password in change passwd


* 1.2 series
------------
Installer
  * artwork?
  * make anonymous user for browsing?
  * test log file exists, writable
  * test suite as
  * installer test suite as object suite?
        All tests in the test suite should report their outcome in a consistent manner, making it easy for humans or computer programs to understand and to process them. The following test states, defined by EARL (the Evaluation And Report Language), have proved useful:
          * cannotTell
          * fail
          * notApplicable
          * notTested
          * pass


Features:

  * report generation memory usage (can't generate NMR report for Q1 2006)
  * list view of bookings
  * polite "offline" mode
  * trap unconfigured and send to installer
  * trap configured and get out of installer

  * i18n:
    - date/time customisation

  * logging
    - include in more places
    - include in installer/upgrader

  * fix dropdown truncation (also for multi-byte chars)
  * db hardening:
    - put all column names and table names in back ticks,
    - integers in quotes
    - check UTF8-ness of strings
  * use fieldset and label to beautify forms
  * beautify calendar
  * onMouseOver info window with more information about booking than current tooltip?



  * IE5Mac compatability?
  * groups of instruments
  * bring email templates into the database
  * limit certain users to specific ranges of time on a particular instrument (Gordon Holtslander)


  * combine instruments onto the one calendar in some way. even just a free/busy with name

  * change all boolean fields to !fieldname instead of fieldname = true

  * email ics file for booking to user

  * mark some pages as cachable so that back button doesn't lose user input; provide reset button


i18n:
  * HOWTO:
      ./update-translations.sh
      php-gettext: gettext.inc: $enable_cache=false  CachedFileReader



  * send email reminder at configurable interval before (cron job?)
  * ical export, free/busy
  * timezone of server rel user
  * overlay multiple instruments on one calendar
  * show multiple instruments side-by-side in columns
  * jump to day calendar on day view
  * hold bookings for approval / display on calendar or not?

  * reportbug script that includes phpinfo() etc

  * activity log in db rather than flat file?



* Later
------------
  * in-place booking (js mouse commands, DOM+js/ajax?)
  * click+drag time selection?


*recurring scheduling

* graceful handling of duplicate usernames (Not "oops.... message")


* being able to set permissions on groups of instruments and groups of
 users

* more reporting functions: future bookings by a user or group

* group of instruments:
  - calendar displays.
  - permissions
  - billing reports

* book instruments for weeks/months.

* instruments
  - does not apply timeslot rule on create?

* confirmation
  - require confirmation for some instruments?


 * full, user-configurable billing support included
 * can export invoices or statements of usage
 * can email invoices or statements of usage to groups
 * unbooking an instrument causes an email to be sent to admin for some timeslots
 * unbooking an instrument causes an email to be sent to the unbook list for some timeslots

* -ve consumable quantities (for returns)?

* email users with notification of booking
* email users a reminder that bookings are coming up (cron job)

* billing

configure exporttypes from files?

* data exports
  - summary of bookings for each user
  - summary of bookings for a set of instruments

* instruments
  - can we put some better validation on the timeslotrule input? e.g. making sure every hour is accounted for?

* installer
  - create bumblebee.ini file?
  - can only run once? delete itself?

* ini file
  - move bumblebee.ini to a db table?

* USER TESTING
  - Firefox
  - IE6
  - Konq
  - IE5.5
  - IE5
  - Safari
  - Netscape 7 OSX



create a real db with no bogus booking data and no dodgy invalid users etc
-> sf.net


* theme
  - clean up CSS, images etc for theme
  - icon location, also for export


->layout switch? use as call back function?

radiolist always returns ischanged on update()

reflect postdata in case of re-login
 - when do sessions die?



$string = strip_tags($string, '<a><b><i><u>')
also do this in qw? $string = strip_tags($string, '')


$_SERVER['PHP_SELF']




streamline creation of project with only one group
streamline creation of project when creating a user
(projects: create new as option and if set to create new then make one and send the projectid to "edit project")

??  work out confirmation emails and when adminconfirm is necessary

select all/deselect all javascript buttons where applicable



* unbook emails

delete references to groups, projects in billing info, userprojects etc
-- should there be checks for this? cannot delete things if used elsewhere?



Billing SQL notes:

for billing analysis, write a smart parser that scans the template for keys to write the SQL. May need to do some clever parsing too.




------------

see also:
  ors.sf.net






LIMITATIONS
===========
records are not locked while edited (update is atomic, but last-submitted changes win)



\
